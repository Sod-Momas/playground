<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- services -->

    <bean id="springCoreHelloService" class="cc.momas.spring.core.SpringCoreHelloService"/>
    <!--  使用静态工厂方法产生实例 https://docs.spring.io/spring-framework/docs/5.1.5.RELEASE/spring-framework-reference/core.html#beans-factory-class-static-factory-method  -->
    <bean id="singleDogService" class="cc.momas.spring.core.SingleDogService" factory-method="getInstance"/>
    <!-- 实例工厂 https://docs.spring.io/spring-framework/docs/5.1.5.RELEASE/spring-framework-reference/core.html#beans-factory-class-instance-factory-method -->
    <bean id="animalFacktory" class="cc.momas.spring.core.AnimalFactory" factory-method="getInstance"/>
    <bean id="dog" class="cc.momas.spring.core.AnimalFactory.Dog" factory-bean="animalFacktory" factory-method="getDog"/>
    <bean id="duck" class="cc.momas.spring.core.AnimalFactory.Duck" factory-bean="animalFacktory" factory-method="getDuck"/>

    <!-- 构造参数方式   https://docs.spring.io/spring-framework/docs/5.1.5.RELEASE/spring-framework-reference/core.html#beans-factory-collaborators-->
    <bean id="toy" class="cc.momas.spring.core.Toy">
        <constructor-arg index="0" name="name" value="小鱼干玩具"/>
    </bean>
    <!--  有构造参数的实例构造-->
    <bean id="cat" class="cc.momas.spring.core.Cat">
        <!--
        index 是指定参数的下标，获取不到name指定的参数名时就需要使用index
        一般使用name指定参数名，value指定参数值就好了
        -->
        <constructor-arg index="0" name="age" value="1"/>
        <constructor-arg index="1" name="name" value="nya"/>
        <constructor-arg index="2" name="toys" ref="toy"/>
    </bean>

    <!-- 使用autowire让bean里的属性被自动注入(基于setter ) -->
    <bean id="autowiredZoo" class="cc.momas.spring.core.AutowiredZoo" autowire="byType">
        <constructor-arg name="cat" ref="cat"/>
    </bean>

    <!--    使用字符串块直接赋值-->
    <bean id="mappings"
          class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <!-- typed as a java.util.Properties -->
        <property name="properties">
            <value>
                jdbc.driver.className=com.mysql.jdbc.Driver
                jdbc.url=jdbc:mysql://localhost:3306/mydb
            </value>
        </property>
    </bean>

    <!--    集合演示 -->
    <bean id="complexObject" class="cc.momas.spring.core.ComplexObject">
        <!-- results in a setAdminEmails(java.util.Properties) call -->
        <property name="adminEmails">
            <props>
                <prop key="administrator">administrator@example.org</prop>
                <prop key="support">support@example.org</prop>
                <prop key="development">development@example.org</prop>
            </props>
        </property>
        <!-- results in a setSomeList(java.util.List) call -->
        <property name="someList">
            <list>
                <value>a list element followed by a reference</value>
                <ref bean="toy" />
            </list>
        </property>
        <!-- results in a setSomeMap(java.util.Map) call -->
        <property name="someMap">
            <map>
                <entry key="an entry" value="just some string"/>
                <entry key ="a ref" value-ref="toy"/>
            </map>
        </property>
        <!-- results in a setSomeSet(java.util.Set) call -->
        <property name="someSet">
            <set>
                <value>just some string</value>
                <ref bean="toy" />
            </set>
        </property>
    </bean>
    <!-- more bean definitions for services go here -->

</beans>